# -*- coding: utf-8 -*-
"""contacts.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14fCUWHlfW8rgzjLj8EERmA37wI0oBGG4
"""

# Google Colab-Compatible Pharma Long Straddle Algorithm with Percentage Threshold Variation

import yfinance as yf  # Fetch stock data
import numpy as np  # Numerical operations
import pandas as pd  # Data manipulation
import datetime  # Date operations
import time  # API pacing
from IPython.display import display  # Display results in Colab

# =========================
# 1. Pre-Researched List of Companies
# =========================
companies = [
    'ACAD', 'AXSM', 'BHVN', 'CORT', 'EYPT', 'FENC', 'GOSS', 'HZNP', 'IMTX', 'JNCE',
    'KNSA', 'LGND', 'MRTX', 'NERV', 'OCUL', 'PLRX', 'QURE', 'RARE', 'SIGA', 'TGTX',
    'UTHR', 'VCNX', 'XERS', 'ZYME'
]
print(f"Analyzing {len(companies)} pharmaceutical companies.")

# =========================
# 2. Get Market Cap
# =========================
def get_market_cap(ticker):
    try:
        return yf.Ticker(ticker).info.get('marketCap', 0)
    except Exception:
        return 0

# =========================
# 3. Simulate Long Straddle Strategy with Varying Percentage Thresholds
# =========================
def long_straddle(ticker, start_date, end_date, percentage_threshold):
    try:
        data = yf.Ticker(ticker).history(start=start_date, end=end_date)
        if data.empty:
            return None

        initial_price = data['Close'].iloc[0]
        upper_threshold = initial_price * (1 + percentage_threshold)
        lower_threshold = initial_price * (1 - percentage_threshold)

        data['Log Returns'] = np.log(data['Close'] / data['Close'].shift(1))

        # Ensure Close column has valid values before filtering
        if data['Close'].isna().all():
            return None

        # Filter only dates when price breaks the threshold
        straddle_events = data[(data['Close'] >= upper_threshold) | (data['Close'] <= lower_threshold)]

        if straddle_events.empty:
            return None

        return straddle_events['Log Returns']
    except Exception:
        return None

# =========================
# 4. Execute Strategy with Varying Thresholds and Compute Net Sharpe
# =========================
start_date, end_date = '2024-01-01', '2025-02-17'
market_cap_threshold = 1_000_000_000  # 1 Billion USD

for pct in np.arange(0.01, 0.21, 0.01):
    print(f"\nRunning strategy with {pct:.2%} threshold")
    trade_returns = []

    for ticker in companies:
        market_cap = get_market_cap(ticker)
        if 0 < market_cap < market_cap_threshold:
            returns = long_straddle(ticker, start_date, end_date, pct)
            if returns is not None and not returns.empty:
                trade_returns.append(returns)
            time.sleep(0.5)

    # Compute Sharpe Ratio for executed trades
    if trade_returns:
        combined_trades = pd.concat(trade_returns)
        mean_return = combined_trades.mean() * 252
        std_return = combined_trades.std() * np.sqrt(252)
        sharpe_ratio = mean_return / std_return if std_return != 0 else np.nan
        print(f"Sharpe Ratio for {pct:.2%} threshold: {sharpe_ratio:.2f}")
    else:
        print(f"No valid trades executed for {pct:.2%} threshold.")